name: MacOSX unit tests

on:
  workflow_dispatch:
    inputs:
      python_version:
        required: true
        type: string
      ref:
        required: false
        type: string

jobs:
  MacOSX:

    runs-on: macos-latest
    name: Unit tests

    steps:
      - name: Get ref
        id: ref
        run: |
          ref = "${{ inputs.ref }}" or "${{ github.event.ref }}"
          with open("${{ github.output }}", "a") as f:
              print("ref=", ref, sep='', file=f)
        shell: python
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.ref.outputs.ref }}
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
        if: inputs.python_version == ''
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}
        if: inputs.python_version != ''
      - name: Install dependencies
        uses: ./.github/actions/macos_install
      - name: Install Pyccel with tests
        run: |
            python -m pip install --upgrade pip
            python -m pip install .[test]
        shell: bash
      - name: Fortran/C tests with pytest
        id: f_c_pytest
        timeout-minutes: 60
        uses: ./.github/actions/pytest_run
      - name: Python tests with pytest
        id: python_pytest
        timeout-minutes: 20
        uses: ./.github/actions/pytest_run_python
      - name: Parallel tests with pytest
        id: parallel
        timeout-minutes: 20
        uses: ./.github/actions/pytest_parallel
      - name: Final status
        if: always()
        id: status
        run:
          python ci_tools/check_success.py $GITHUB_OUTPUT steps.f_c_pytest.outcome steps.python_pytest.outcome steps.parallel.outcome
      - name: "Post completed"
        if: always()
        uses: ./.github/actions/post_completed
        with:
          installation_token: ${{ steps.token.outputs.installation_token }}
          run_id: ${{ steps.check_create.outputs.check_id }}
          status: ${{ steps.status.outcome }}
