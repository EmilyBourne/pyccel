name: Anaconda-Linux

on:
  workflow_dispatch:
    inputs:
      python_version:
        required: true
        type: string
      ref:
        required: true
        type: string

jobs:
  Anaconda-Linux:
    runs-on: ubuntu-latest
    name: Unit tests

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: true
          python-version: ${{ inputs.python_version }}
      - name: "Generate token"
        id: token
        uses: ./.github/actions/generate_bot_token
        with:
          bot_pem: "${{ secrets.BOT_PEM }}"
      - name: "Post in progress"
        id: check_create
        uses: ./.github/actions/post_triggered
        with:
          ref: ${{ inputs.ref }}
          installation_token: ${{ steps.token.outputs.installation_token }}
          name: "Unit tests on linux with anaconda (linux_anaconda)"
      - name: Install python dependencies
        uses: ./.github/actions/conda_installation
        with:
          mpi_type: openmpi
      - name: Fortran/C tests with pytest
        id: f_c_pytest
        timeout-minutes: 60
        uses: ./.github/actions/pytest_run
        with:
          shell_cmd: "bash -l {0}"
      - name: Python tests with pytest
        id: python_pytest
        timeout-minutes: 20
        uses: ./.github/actions/pytest_run_python
        with:
          shell_cmd: "bash -l {0}"
      - name: Parallel tests with pytest
        id: parallel
        timeout-minutes: 20
        uses: ./.github/actions/pytest_parallel
        with:
          shell_cmd: "bash -l {0}"
      - name: Final status
        if: always()
        id: status
        run:
          python ci_tools/check_success.py $GITHUB_OUTPUT steps.f_c_pytest.outcome steps.python_pytest.outcome steps.parallel.outcome
      - name: "Post completed"
        if: always()
        uses: ./.github/actions/post_completed
        with:
          installation_token: ${{ steps.token.outputs.installation_token }}
          run_id: ${{ steps.check_create.outputs.check_id }}
          status: ${{ steps.status.outcome }}
