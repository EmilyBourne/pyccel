name: Wheel-pickled-installation

on:
  workflow_dispatch:
    inputs:
      python_version:
        required: true
        type: string
      ref:
        required: false
        type: string
      check_run_id:
        required: false
        type: string

env:
  COMMIT: ${{ inputs.ref || github.event.ref }}

jobs:
  Wheel-pickled-installation:
    runs-on: ubuntu-latest
    name: Deploy tests

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${COMMIT}
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python_version }}
      - name: "Setup"
        id: token
        run: |
          pip install jwt requests
          python ci_tools/setup_check_run.py
        env:
          PEM: ${{ secrets.BOT_PEM }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_CHECK_RUN_ID: ${{ inputs.check_run_id }}
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Install Pyccel from wheel
        id: pickle
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build
          python -m build
          python -m pip install dist/*.whl
        shell: bash
      - name: Check for existence of pickled files
        id: pickle_check
        uses: ./.github/actions/check_for_pickled
      - name: "Post completed"
        if: always()
        run:
          python ci_tools/complete_check_run.py ${{ steps.pickle.outcome }} ${{ steps.pickle_check.outcome }}
        env:
          installation_token: ${{ steps.token.outputs.installation_token }}
          installation_token_exp: ${{ steps.token.outputs.installation_token_exp }}
